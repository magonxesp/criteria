[{"name":"ASC","description":"io.github.magonxesp.criteria.domain.Order.ASC","location":"core/io.github.magonxesp.criteria.domain/-order/-a-s-c/index.html","searchKeys":["ASC","ASC","io.github.magonxesp.criteria.domain.Order.ASC"]},{"name":"CONTAINS","description":"io.github.magonxesp.criteria.domain.FilterOperator.CONTAINS","location":"core/io.github.magonxesp.criteria.domain/-filter-operator/-c-o-n-t-a-i-n-s/index.html","searchKeys":["CONTAINS","CONTAINS","io.github.magonxesp.criteria.domain.FilterOperator.CONTAINS"]},{"name":"DESC","description":"io.github.magonxesp.criteria.domain.Order.DESC","location":"core/io.github.magonxesp.criteria.domain/-order/-d-e-s-c/index.html","searchKeys":["DESC","DESC","io.github.magonxesp.criteria.domain.Order.DESC"]},{"name":"EQUALS","description":"io.github.magonxesp.criteria.domain.FilterOperator.EQUALS","location":"core/io.github.magonxesp.criteria.domain/-filter-operator/-e-q-u-a-l-s/index.html","searchKeys":["EQUALS","EQUALS","io.github.magonxesp.criteria.domain.FilterOperator.EQUALS"]},{"name":"GREATER_THAN","description":"io.github.magonxesp.criteria.domain.FilterOperator.GREATER_THAN","location":"core/io.github.magonxesp.criteria.domain/-filter-operator/-g-r-e-a-t-e-r_-t-h-a-n/index.html","searchKeys":["GREATER_THAN","GREATER_THAN","io.github.magonxesp.criteria.domain.FilterOperator.GREATER_THAN"]},{"name":"GREATER_THAN_EQUALS","description":"io.github.magonxesp.criteria.domain.FilterOperator.GREATER_THAN_EQUALS","location":"core/io.github.magonxesp.criteria.domain/-filter-operator/-g-r-e-a-t-e-r_-t-h-a-n_-e-q-u-a-l-s/index.html","searchKeys":["GREATER_THAN_EQUALS","GREATER_THAN_EQUALS","io.github.magonxesp.criteria.domain.FilterOperator.GREATER_THAN_EQUALS"]},{"name":"LESS_THAN","description":"io.github.magonxesp.criteria.domain.FilterOperator.LESS_THAN","location":"core/io.github.magonxesp.criteria.domain/-filter-operator/-l-e-s-s_-t-h-a-n/index.html","searchKeys":["LESS_THAN","LESS_THAN","io.github.magonxesp.criteria.domain.FilterOperator.LESS_THAN"]},{"name":"LESS_THAN_EQUALS","description":"io.github.magonxesp.criteria.domain.FilterOperator.LESS_THAN_EQUALS","location":"core/io.github.magonxesp.criteria.domain/-filter-operator/-l-e-s-s_-t-h-a-n_-e-q-u-a-l-s/index.html","searchKeys":["LESS_THAN_EQUALS","LESS_THAN_EQUALS","io.github.magonxesp.criteria.domain.FilterOperator.LESS_THAN_EQUALS"]},{"name":"NOT_CONTAINS","description":"io.github.magonxesp.criteria.domain.FilterOperator.NOT_CONTAINS","location":"core/io.github.magonxesp.criteria.domain/-filter-operator/-n-o-t_-c-o-n-t-a-i-n-s/index.html","searchKeys":["NOT_CONTAINS","NOT_CONTAINS","io.github.magonxesp.criteria.domain.FilterOperator.NOT_CONTAINS"]},{"name":"NOT_EQUALS","description":"io.github.magonxesp.criteria.domain.FilterOperator.NOT_EQUALS","location":"core/io.github.magonxesp.criteria.domain/-filter-operator/-n-o-t_-e-q-u-a-l-s/index.html","searchKeys":["NOT_EQUALS","NOT_EQUALS","io.github.magonxesp.criteria.domain.FilterOperator.NOT_EQUALS"]},{"name":"REGEX","description":"io.github.magonxesp.criteria.domain.FilterOperator.REGEX","location":"core/io.github.magonxesp.criteria.domain/-filter-operator/-r-e-g-e-x/index.html","searchKeys":["REGEX","REGEX","io.github.magonxesp.criteria.domain.FilterOperator.REGEX"]},{"name":"abstract class Adapter(fieldMap: FieldMap)","description":"io.github.magonxesp.criteria.infrastructure.Adapter","location":"core/io.github.magonxesp.criteria.infrastructure/-adapter/index.html","searchKeys":["Adapter","abstract class Adapter(fieldMap: FieldMap)","io.github.magonxesp.criteria.infrastructure.Adapter"]},{"name":"abstract class FieldMap","description":"io.github.magonxesp.criteria.infrastructure.map.FieldMap","location":"core/io.github.magonxesp.criteria.infrastructure.map/-field-map/index.html","searchKeys":["FieldMap","abstract class FieldMap","io.github.magonxesp.criteria.infrastructure.map.FieldMap"]},{"name":"abstract val map: Map<String, String>","description":"io.github.magonxesp.criteria.infrastructure.map.FieldMap.map","location":"core/io.github.magonxesp.criteria.infrastructure.map/-field-map/map.html","searchKeys":["map","abstract val map: Map<String, String>","io.github.magonxesp.criteria.infrastructure.map.FieldMap.map"]},{"name":"class CriteriaBuilder(filters: MutableList<Filter> = mutableListOf(), orderBy: MutableList<OrderBy> = mutableListOf(), var page: Int = 1, var pageSize: Int? = null)","description":"io.github.magonxesp.criteria.domain.CriteriaBuilder","location":"core/io.github.magonxesp.criteria.domain/-criteria-builder/index.html","searchKeys":["CriteriaBuilder","class CriteriaBuilder(filters: MutableList<Filter> = mutableListOf(), orderBy: MutableList<OrderBy> = mutableListOf(), var page: Int = 1, var pageSize: Int? = null)","io.github.magonxesp.criteria.domain.CriteriaBuilder"]},{"name":"class CriteriaExposedQueryAdapter(columns: Map<String, Column<Any>>, fieldMap: FieldMap = DefaultFieldMap())","description":"io.github.magonxesp.criteria.infrastructure.exposed.CriteriaExposedQueryAdapter","location":"core/io.github.magonxesp.criteria.infrastructure.exposed/-criteria-exposed-query-adapter/index.html","searchKeys":["CriteriaExposedQueryAdapter","class CriteriaExposedQueryAdapter(columns: Map<String, Column<Any>>, fieldMap: FieldMap = DefaultFieldMap())","io.github.magonxesp.criteria.infrastructure.exposed.CriteriaExposedQueryAdapter"]},{"name":"class CriteriaMongoDbFindFlowAdapter(fieldMap: FieldMap = DefaultFieldMap())","description":"io.github.magonxesp.criteria.infrastructure.mongodb.CriteriaMongoDbFindFlowAdapter","location":"core/io.github.magonxesp.criteria.infrastructure.mongodb/-criteria-mongo-db-find-flow-adapter/index.html","searchKeys":["CriteriaMongoDbFindFlowAdapter","class CriteriaMongoDbFindFlowAdapter(fieldMap: FieldMap = DefaultFieldMap())","io.github.magonxesp.criteria.infrastructure.mongodb.CriteriaMongoDbFindFlowAdapter"]},{"name":"class DefaultFieldMap(val map: Map<String, String> = mapOf()) : FieldMap","description":"io.github.magonxesp.criteria.infrastructure.map.DefaultFieldMap","location":"core/io.github.magonxesp.criteria.infrastructure.map/-default-field-map/index.html","searchKeys":["DefaultFieldMap","class DefaultFieldMap(val map: Map<String, String> = mapOf()) : FieldMap","io.github.magonxesp.criteria.infrastructure.map.DefaultFieldMap"]},{"name":"class FilterBsonAdapter(fieldMap: FieldMap) : Adapter","description":"io.github.magonxesp.criteria.infrastructure.mongodb.FilterBsonAdapter","location":"core/io.github.magonxesp.criteria.infrastructure.mongodb/-filter-bson-adapter/index.html","searchKeys":["FilterBsonAdapter","class FilterBsonAdapter(fieldMap: FieldMap) : Adapter","io.github.magonxesp.criteria.infrastructure.mongodb.FilterBsonAdapter"]},{"name":"class FilterPredicateAdapter(columns: Map<String, Column<Any>>, fieldMap: FieldMap) : Adapter","description":"io.github.magonxesp.criteria.infrastructure.exposed.FilterPredicateAdapter","location":"core/io.github.magonxesp.criteria.infrastructure.exposed/-filter-predicate-adapter/index.html","searchKeys":["FilterPredicateAdapter","class FilterPredicateAdapter(columns: Map<String, Column<Any>>, fieldMap: FieldMap) : Adapter","io.github.magonxesp.criteria.infrastructure.exposed.FilterPredicateAdapter"]},{"name":"class OrderByBsonAdapter(fieldMap: FieldMap) : Adapter","description":"io.github.magonxesp.criteria.infrastructure.mongodb.OrderByBsonAdapter","location":"core/io.github.magonxesp.criteria.infrastructure.mongodb/-order-by-bson-adapter/index.html","searchKeys":["OrderByBsonAdapter","class OrderByBsonAdapter(fieldMap: FieldMap) : Adapter","io.github.magonxesp.criteria.infrastructure.mongodb.OrderByBsonAdapter"]},{"name":"class OrderPredicateAdapter(columns: Map<String, Column<Any>>, fieldMap: FieldMap) : Adapter","description":"io.github.magonxesp.criteria.infrastructure.exposed.OrderPredicateAdapter","location":"core/io.github.magonxesp.criteria.infrastructure.exposed/-order-predicate-adapter/index.html","searchKeys":["OrderPredicateAdapter","class OrderPredicateAdapter(columns: Map<String, Column<Any>>, fieldMap: FieldMap) : Adapter","io.github.magonxesp.criteria.infrastructure.exposed.OrderPredicateAdapter"]},{"name":"class RequiredFieldException(val message: String? = null) : Exception","description":"io.github.magonxesp.criteria.domain.RequiredFieldException","location":"core/io.github.magonxesp.criteria.domain/-required-field-exception/index.html","searchKeys":["RequiredFieldException","class RequiredFieldException(val message: String? = null) : Exception","io.github.magonxesp.criteria.domain.RequiredFieldException"]},{"name":"class SerializableCriteria(val filters: List<SerializableFilter>, val orderBy: List<SerializableOrderBy>, val pagination: SerializablePagination)","description":"io.github.magonxesp.criteria.infrastructure.serialization.SerializableCriteria","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/-serializable-criteria/index.html","searchKeys":["SerializableCriteria","class SerializableCriteria(val filters: List<SerializableFilter>, val orderBy: List<SerializableOrderBy>, val pagination: SerializablePagination)","io.github.magonxesp.criteria.infrastructure.serialization.SerializableCriteria"]},{"name":"class SerializableFilter(val field: String, val value: JsonElement, val operator: String)","description":"io.github.magonxesp.criteria.infrastructure.serialization.SerializableFilter","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/-serializable-filter/index.html","searchKeys":["SerializableFilter","class SerializableFilter(val field: String, val value: JsonElement, val operator: String)","io.github.magonxesp.criteria.infrastructure.serialization.SerializableFilter"]},{"name":"class SerializableOrderBy(val field: String, val order: String)","description":"io.github.magonxesp.criteria.infrastructure.serialization.SerializableOrderBy","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/-serializable-order-by/index.html","searchKeys":["SerializableOrderBy","class SerializableOrderBy(val field: String, val order: String)","io.github.magonxesp.criteria.infrastructure.serialization.SerializableOrderBy"]},{"name":"class SerializablePagination(val page: Int, val size: Int?)","description":"io.github.magonxesp.criteria.infrastructure.serialization.SerializablePagination","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/-serializable-pagination/index.html","searchKeys":["SerializablePagination","class SerializablePagination(val page: Int, val size: Int?)","io.github.magonxesp.criteria.infrastructure.serialization.SerializablePagination"]},{"name":"class StrictFieldMap(val map: Map<String, String>) : FieldMap","description":"io.github.magonxesp.criteria.infrastructure.map.StrictFieldMap","location":"core/io.github.magonxesp.criteria.infrastructure.map/-strict-field-map/index.html","searchKeys":["StrictFieldMap","class StrictFieldMap(val map: Map<String, String>) : FieldMap","io.github.magonxesp.criteria.infrastructure.map.StrictFieldMap"]},{"name":"constructor()","description":"io.github.magonxesp.criteria.infrastructure.map.FieldMap.FieldMap","location":"core/io.github.magonxesp.criteria.infrastructure.map/-field-map/-field-map.html","searchKeys":["FieldMap","constructor()","io.github.magonxesp.criteria.infrastructure.map.FieldMap.FieldMap"]},{"name":"constructor(columns: Map<String, Column<Any>>, fieldMap: FieldMap = DefaultFieldMap())","description":"io.github.magonxesp.criteria.infrastructure.exposed.CriteriaExposedQueryAdapter.CriteriaExposedQueryAdapter","location":"core/io.github.magonxesp.criteria.infrastructure.exposed/-criteria-exposed-query-adapter/-criteria-exposed-query-adapter.html","searchKeys":["CriteriaExposedQueryAdapter","constructor(columns: Map<String, Column<Any>>, fieldMap: FieldMap = DefaultFieldMap())","io.github.magonxesp.criteria.infrastructure.exposed.CriteriaExposedQueryAdapter.CriteriaExposedQueryAdapter"]},{"name":"constructor(columns: Map<String, Column<Any>>, fieldMap: FieldMap)","description":"io.github.magonxesp.criteria.infrastructure.exposed.FilterPredicateAdapter.FilterPredicateAdapter","location":"core/io.github.magonxesp.criteria.infrastructure.exposed/-filter-predicate-adapter/-filter-predicate-adapter.html","searchKeys":["FilterPredicateAdapter","constructor(columns: Map<String, Column<Any>>, fieldMap: FieldMap)","io.github.magonxesp.criteria.infrastructure.exposed.FilterPredicateAdapter.FilterPredicateAdapter"]},{"name":"constructor(columns: Map<String, Column<Any>>, fieldMap: FieldMap)","description":"io.github.magonxesp.criteria.infrastructure.exposed.OrderPredicateAdapter.OrderPredicateAdapter","location":"core/io.github.magonxesp.criteria.infrastructure.exposed/-order-predicate-adapter/-order-predicate-adapter.html","searchKeys":["OrderPredicateAdapter","constructor(columns: Map<String, Column<Any>>, fieldMap: FieldMap)","io.github.magonxesp.criteria.infrastructure.exposed.OrderPredicateAdapter.OrderPredicateAdapter"]},{"name":"constructor(criteria: Criteria)","description":"io.github.magonxesp.criteria.domain.CriteriaBuilder.CriteriaBuilder","location":"core/io.github.magonxesp.criteria.domain/-criteria-builder/-criteria-builder.html","searchKeys":["CriteriaBuilder","constructor(criteria: Criteria)","io.github.magonxesp.criteria.domain.CriteriaBuilder.CriteriaBuilder"]},{"name":"constructor(field: String, order: Order = Order.ASC)","description":"io.github.magonxesp.criteria.domain.OrderBy.OrderBy","location":"core/io.github.magonxesp.criteria.domain/-order-by/-order-by.html","searchKeys":["OrderBy","constructor(field: String, order: Order = Order.ASC)","io.github.magonxesp.criteria.domain.OrderBy.OrderBy"]},{"name":"constructor(field: String, order: String)","description":"io.github.magonxesp.criteria.infrastructure.serialization.SerializableOrderBy.SerializableOrderBy","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/-serializable-order-by/-serializable-order-by.html","searchKeys":["SerializableOrderBy","constructor(field: String, order: String)","io.github.magonxesp.criteria.infrastructure.serialization.SerializableOrderBy.SerializableOrderBy"]},{"name":"constructor(field: String, value: Any, operator: FilterOperator = FilterOperator.EQUALS)","description":"io.github.magonxesp.criteria.domain.Filter.Filter","location":"core/io.github.magonxesp.criteria.domain/-filter/-filter.html","searchKeys":["Filter","constructor(field: String, value: Any, operator: FilterOperator = FilterOperator.EQUALS)","io.github.magonxesp.criteria.domain.Filter.Filter"]},{"name":"constructor(field: String, value: JsonElement, operator: String)","description":"io.github.magonxesp.criteria.infrastructure.serialization.SerializableFilter.SerializableFilter","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/-serializable-filter/-serializable-filter.html","searchKeys":["SerializableFilter","constructor(field: String, value: JsonElement, operator: String)","io.github.magonxesp.criteria.infrastructure.serialization.SerializableFilter.SerializableFilter"]},{"name":"constructor(fieldMap: FieldMap = DefaultFieldMap())","description":"io.github.magonxesp.criteria.infrastructure.mongodb.CriteriaMongoDbFindFlowAdapter.CriteriaMongoDbFindFlowAdapter","location":"core/io.github.magonxesp.criteria.infrastructure.mongodb/-criteria-mongo-db-find-flow-adapter/-criteria-mongo-db-find-flow-adapter.html","searchKeys":["CriteriaMongoDbFindFlowAdapter","constructor(fieldMap: FieldMap = DefaultFieldMap())","io.github.magonxesp.criteria.infrastructure.mongodb.CriteriaMongoDbFindFlowAdapter.CriteriaMongoDbFindFlowAdapter"]},{"name":"constructor(fieldMap: FieldMap)","description":"io.github.magonxesp.criteria.infrastructure.Adapter.Adapter","location":"core/io.github.magonxesp.criteria.infrastructure/-adapter/-adapter.html","searchKeys":["Adapter","constructor(fieldMap: FieldMap)","io.github.magonxesp.criteria.infrastructure.Adapter.Adapter"]},{"name":"constructor(fieldMap: FieldMap)","description":"io.github.magonxesp.criteria.infrastructure.mongodb.FilterBsonAdapter.FilterBsonAdapter","location":"core/io.github.magonxesp.criteria.infrastructure.mongodb/-filter-bson-adapter/-filter-bson-adapter.html","searchKeys":["FilterBsonAdapter","constructor(fieldMap: FieldMap)","io.github.magonxesp.criteria.infrastructure.mongodb.FilterBsonAdapter.FilterBsonAdapter"]},{"name":"constructor(fieldMap: FieldMap)","description":"io.github.magonxesp.criteria.infrastructure.mongodb.OrderByBsonAdapter.OrderByBsonAdapter","location":"core/io.github.magonxesp.criteria.infrastructure.mongodb/-order-by-bson-adapter/-order-by-bson-adapter.html","searchKeys":["OrderByBsonAdapter","constructor(fieldMap: FieldMap)","io.github.magonxesp.criteria.infrastructure.mongodb.OrderByBsonAdapter.OrderByBsonAdapter"]},{"name":"constructor(filters: List<Filter> = listOf(), orderBy: List<OrderBy> = listOf(), pagination: Pagination = Pagination())","description":"io.github.magonxesp.criteria.domain.Criteria.Criteria","location":"core/io.github.magonxesp.criteria.domain/-criteria/-criteria.html","searchKeys":["Criteria","constructor(filters: List<Filter> = listOf(), orderBy: List<OrderBy> = listOf(), pagination: Pagination = Pagination())","io.github.magonxesp.criteria.domain.Criteria.Criteria"]},{"name":"constructor(filters: List<SerializableFilter>, orderBy: List<SerializableOrderBy>, pagination: SerializablePagination)","description":"io.github.magonxesp.criteria.infrastructure.serialization.SerializableCriteria.SerializableCriteria","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/-serializable-criteria/-serializable-criteria.html","searchKeys":["SerializableCriteria","constructor(filters: List<SerializableFilter>, orderBy: List<SerializableOrderBy>, pagination: SerializablePagination)","io.github.magonxesp.criteria.infrastructure.serialization.SerializableCriteria.SerializableCriteria"]},{"name":"constructor(filters: MutableList<Filter> = mutableListOf(), orderBy: MutableList<OrderBy> = mutableListOf(), page: Int = 1, pageSize: Int? = null)","description":"io.github.magonxesp.criteria.domain.CriteriaBuilder.CriteriaBuilder","location":"core/io.github.magonxesp.criteria.domain/-criteria-builder/-criteria-builder.html","searchKeys":["CriteriaBuilder","constructor(filters: MutableList<Filter> = mutableListOf(), orderBy: MutableList<OrderBy> = mutableListOf(), page: Int = 1, pageSize: Int? = null)","io.github.magonxesp.criteria.domain.CriteriaBuilder.CriteriaBuilder"]},{"name":"constructor(items: List<T>, totalPages: Long, totalItems: Long, currentPage: Long)","description":"io.github.magonxesp.criteria.domain.PaginatedCollection.PaginatedCollection","location":"core/io.github.magonxesp.criteria.domain/-paginated-collection/-paginated-collection.html","searchKeys":["PaginatedCollection","constructor(items: List<T>, totalPages: Long, totalItems: Long, currentPage: Long)","io.github.magonxesp.criteria.domain.PaginatedCollection.PaginatedCollection"]},{"name":"constructor(map: Map<String, String> = mapOf())","description":"io.github.magonxesp.criteria.infrastructure.map.DefaultFieldMap.DefaultFieldMap","location":"core/io.github.magonxesp.criteria.infrastructure.map/-default-field-map/-default-field-map.html","searchKeys":["DefaultFieldMap","constructor(map: Map<String, String> = mapOf())","io.github.magonxesp.criteria.infrastructure.map.DefaultFieldMap.DefaultFieldMap"]},{"name":"constructor(map: Map<String, String>)","description":"io.github.magonxesp.criteria.infrastructure.map.StrictFieldMap.StrictFieldMap","location":"core/io.github.magonxesp.criteria.infrastructure.map/-strict-field-map/-strict-field-map.html","searchKeys":["StrictFieldMap","constructor(map: Map<String, String>)","io.github.magonxesp.criteria.infrastructure.map.StrictFieldMap.StrictFieldMap"]},{"name":"constructor(message: String? = null)","description":"io.github.magonxesp.criteria.domain.RequiredFieldException.RequiredFieldException","location":"core/io.github.magonxesp.criteria.domain/-required-field-exception/-required-field-exception.html","searchKeys":["RequiredFieldException","constructor(message: String? = null)","io.github.magonxesp.criteria.domain.RequiredFieldException.RequiredFieldException"]},{"name":"constructor(page: Int = 1, size: Int? = 25)","description":"io.github.magonxesp.criteria.domain.Pagination.Pagination","location":"core/io.github.magonxesp.criteria.domain/-pagination/-pagination.html","searchKeys":["Pagination","constructor(page: Int = 1, size: Int? = 25)","io.github.magonxesp.criteria.domain.Pagination.Pagination"]},{"name":"constructor(page: Int, size: Int?)","description":"io.github.magonxesp.criteria.infrastructure.serialization.SerializablePagination.SerializablePagination","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/-serializable-pagination/-serializable-pagination.html","searchKeys":["SerializablePagination","constructor(page: Int, size: Int?)","io.github.magonxesp.criteria.infrastructure.serialization.SerializablePagination.SerializablePagination"]},{"name":"data class Criteria(val filters: List<Filter> = listOf(), val orderBy: List<OrderBy> = listOf(), val pagination: Pagination = Pagination())","description":"io.github.magonxesp.criteria.domain.Criteria","location":"core/io.github.magonxesp.criteria.domain/-criteria/index.html","searchKeys":["Criteria","data class Criteria(val filters: List<Filter> = listOf(), val orderBy: List<OrderBy> = listOf(), val pagination: Pagination = Pagination())","io.github.magonxesp.criteria.domain.Criteria"]},{"name":"data class Filter(val field: String, val value: Any, val operator: FilterOperator = FilterOperator.EQUALS)","description":"io.github.magonxesp.criteria.domain.Filter","location":"core/io.github.magonxesp.criteria.domain/-filter/index.html","searchKeys":["Filter","data class Filter(val field: String, val value: Any, val operator: FilterOperator = FilterOperator.EQUALS)","io.github.magonxesp.criteria.domain.Filter"]},{"name":"data class OrderBy(val field: String, val order: Order = Order.ASC)","description":"io.github.magonxesp.criteria.domain.OrderBy","location":"core/io.github.magonxesp.criteria.domain/-order-by/index.html","searchKeys":["OrderBy","data class OrderBy(val field: String, val order: Order = Order.ASC)","io.github.magonxesp.criteria.domain.OrderBy"]},{"name":"data class PaginatedCollection<T>(val items: List<T>, val totalPages: Long, val totalItems: Long, val currentPage: Long)","description":"io.github.magonxesp.criteria.domain.PaginatedCollection","location":"core/io.github.magonxesp.criteria.domain/-paginated-collection/index.html","searchKeys":["PaginatedCollection","data class PaginatedCollection<T>(val items: List<T>, val totalPages: Long, val totalItems: Long, val currentPage: Long)","io.github.magonxesp.criteria.domain.PaginatedCollection"]},{"name":"data class Pagination(val page: Int = 1, val size: Int? = 25)","description":"io.github.magonxesp.criteria.domain.Pagination","location":"core/io.github.magonxesp.criteria.domain/-pagination/index.html","searchKeys":["Pagination","data class Pagination(val page: Int = 1, val size: Int? = 25)","io.github.magonxesp.criteria.domain.Pagination"]},{"name":"enum FilterOperator : Enum<FilterOperator> ","description":"io.github.magonxesp.criteria.domain.FilterOperator","location":"core/io.github.magonxesp.criteria.domain/-filter-operator/index.html","searchKeys":["FilterOperator","enum FilterOperator : Enum<FilterOperator> ","io.github.magonxesp.criteria.domain.FilterOperator"]},{"name":"enum Order : Enum<Order> ","description":"io.github.magonxesp.criteria.domain.Order","location":"core/io.github.magonxesp.criteria.domain/-order/index.html","searchKeys":["Order","enum Order : Enum<Order> ","io.github.magonxesp.criteria.domain.Order"]},{"name":"fun <T : Any> apply(criteria: Criteria, findFlow: FindFlow<T>)","description":"io.github.magonxesp.criteria.infrastructure.mongodb.CriteriaMongoDbFindFlowAdapter.apply","location":"core/io.github.magonxesp.criteria.infrastructure.mongodb/-criteria-mongo-db-find-flow-adapter/apply.html","searchKeys":["apply","fun <T : Any> apply(criteria: Criteria, findFlow: FindFlow<T>)","io.github.magonxesp.criteria.infrastructure.mongodb.CriteriaMongoDbFindFlowAdapter.apply"]},{"name":"fun Criteria.encodeToBase64(): String","description":"io.github.magonxesp.criteria.infrastructure.serialization.encodeToBase64","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/encode-to-base64.html","searchKeys":["encodeToBase64","fun Criteria.encodeToBase64(): String","io.github.magonxesp.criteria.infrastructure.serialization.encodeToBase64"]},{"name":"fun Criteria.modify(builder: CriteriaBuilder.() -> Unit): Criteria","description":"io.github.magonxesp.criteria.domain.modify","location":"core/io.github.magonxesp.criteria.domain/modify.html","searchKeys":["modify","fun Criteria.modify(builder: CriteriaBuilder.() -> Unit): Criteria","io.github.magonxesp.criteria.domain.modify"]},{"name":"fun Criteria.replaceFilter(filter: Filter): Criteria","description":"io.github.magonxesp.criteria.domain.replaceFilter","location":"core/io.github.magonxesp.criteria.domain/replace-filter.html","searchKeys":["replaceFilter","fun Criteria.replaceFilter(filter: Filter): Criteria","io.github.magonxesp.criteria.domain.replaceFilter"]},{"name":"fun Criteria.serializeToJson(): String","description":"io.github.magonxesp.criteria.infrastructure.serialization.serializeToJson","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/serialize-to-json.html","searchKeys":["serializeToJson","fun Criteria.serializeToJson(): String","io.github.magonxesp.criteria.infrastructure.serialization.serializeToJson"]},{"name":"fun Criteria.toSerializableCriteria(): SerializableCriteria","description":"io.github.magonxesp.criteria.infrastructure.serialization.toSerializableCriteria","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/to-serializable-criteria.html","searchKeys":["toSerializableCriteria","fun Criteria.toSerializableCriteria(): SerializableCriteria","io.github.magonxesp.criteria.infrastructure.serialization.toSerializableCriteria"]},{"name":"fun Filter.toSerializableFilter(): SerializableFilter","description":"io.github.magonxesp.criteria.infrastructure.serialization.toSerializableFilter","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/to-serializable-filter.html","searchKeys":["toSerializableFilter","fun Filter.toSerializableFilter(): SerializableFilter","io.github.magonxesp.criteria.infrastructure.serialization.toSerializableFilter"]},{"name":"fun List<Filter>.encodeToBase64(): String","description":"io.github.magonxesp.criteria.infrastructure.serialization.encodeToBase64","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/encode-to-base64.html","searchKeys":["encodeToBase64","fun List<Filter>.encodeToBase64(): String","io.github.magonxesp.criteria.infrastructure.serialization.encodeToBase64"]},{"name":"fun List<Filter>.serializeToJson(): String","description":"io.github.magonxesp.criteria.infrastructure.serialization.serializeToJson","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/serialize-to-json.html","searchKeys":["serializeToJson","fun List<Filter>.serializeToJson(): String","io.github.magonxesp.criteria.infrastructure.serialization.serializeToJson"]},{"name":"fun List<OrderBy>.encodeToBase64(): String","description":"io.github.magonxesp.criteria.infrastructure.serialization.encodeToBase64","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/encode-to-base64.html","searchKeys":["encodeToBase64","fun List<OrderBy>.encodeToBase64(): String","io.github.magonxesp.criteria.infrastructure.serialization.encodeToBase64"]},{"name":"fun List<OrderBy>.serializeToJson(): String","description":"io.github.magonxesp.criteria.infrastructure.serialization.serializeToJson","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/serialize-to-json.html","searchKeys":["serializeToJson","fun List<OrderBy>.serializeToJson(): String","io.github.magonxesp.criteria.infrastructure.serialization.serializeToJson"]},{"name":"fun OrderBy.toSerializableOrderBy(): SerializableOrderBy","description":"io.github.magonxesp.criteria.infrastructure.serialization.toSerializableOrderBy","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/to-serializable-order-by.html","searchKeys":["toSerializableOrderBy","fun OrderBy.toSerializableOrderBy(): SerializableOrderBy","io.github.magonxesp.criteria.infrastructure.serialization.toSerializableOrderBy"]},{"name":"fun Pagination.toSerializable(): SerializablePagination","description":"io.github.magonxesp.criteria.infrastructure.serialization.toSerializable","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/to-serializable.html","searchKeys":["toSerializable","fun Pagination.toSerializable(): SerializablePagination","io.github.magonxesp.criteria.infrastructure.serialization.toSerializable"]},{"name":"fun SerializableCriteria.toCriteria(): Criteria","description":"io.github.magonxesp.criteria.infrastructure.serialization.toCriteria","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/to-criteria.html","searchKeys":["toCriteria","fun SerializableCriteria.toCriteria(): Criteria","io.github.magonxesp.criteria.infrastructure.serialization.toCriteria"]},{"name":"fun SerializableFilter.toFilter(): Filter","description":"io.github.magonxesp.criteria.infrastructure.serialization.toFilter","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/to-filter.html","searchKeys":["toFilter","fun SerializableFilter.toFilter(): Filter","io.github.magonxesp.criteria.infrastructure.serialization.toFilter"]},{"name":"fun SerializableOrderBy.toOrderBy(): OrderBy","description":"io.github.magonxesp.criteria.infrastructure.serialization.toOrderBy","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/to-order-by.html","searchKeys":["toOrderBy","fun SerializableOrderBy.toOrderBy(): OrderBy","io.github.magonxesp.criteria.infrastructure.serialization.toOrderBy"]},{"name":"fun SerializablePagination.toPagination(): Pagination","description":"io.github.magonxesp.criteria.infrastructure.serialization.toPagination","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/to-pagination.html","searchKeys":["toPagination","fun SerializablePagination.toPagination(): Pagination","io.github.magonxesp.criteria.infrastructure.serialization.toPagination"]},{"name":"fun String.decodeCriteriaFromBase64(): Criteria","description":"io.github.magonxesp.criteria.infrastructure.serialization.decodeCriteriaFromBase64","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/decode-criteria-from-base64.html","searchKeys":["decodeCriteriaFromBase64","fun String.decodeCriteriaFromBase64(): Criteria","io.github.magonxesp.criteria.infrastructure.serialization.decodeCriteriaFromBase64"]},{"name":"fun String.decodeFiltersFromBase64(): List<Filter>","description":"io.github.magonxesp.criteria.infrastructure.serialization.decodeFiltersFromBase64","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/decode-filters-from-base64.html","searchKeys":["decodeFiltersFromBase64","fun String.decodeFiltersFromBase64(): List<Filter>","io.github.magonxesp.criteria.infrastructure.serialization.decodeFiltersFromBase64"]},{"name":"fun String.decodeOrderByFromBase64(): List<OrderBy>","description":"io.github.magonxesp.criteria.infrastructure.serialization.decodeOrderByFromBase64","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/decode-order-by-from-base64.html","searchKeys":["decodeOrderByFromBase64","fun String.decodeOrderByFromBase64(): List<OrderBy>","io.github.magonxesp.criteria.infrastructure.serialization.decodeOrderByFromBase64"]},{"name":"fun String.deserializeCriteriaFromJson(): Criteria","description":"io.github.magonxesp.criteria.infrastructure.serialization.deserializeCriteriaFromJson","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/deserialize-criteria-from-json.html","searchKeys":["deserializeCriteriaFromJson","fun String.deserializeCriteriaFromJson(): Criteria","io.github.magonxesp.criteria.infrastructure.serialization.deserializeCriteriaFromJson"]},{"name":"fun String.deserializeFiltersFromJson(): List<Filter>","description":"io.github.magonxesp.criteria.infrastructure.serialization.deserializeFiltersFromJson","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/deserialize-filters-from-json.html","searchKeys":["deserializeFiltersFromJson","fun String.deserializeFiltersFromJson(): List<Filter>","io.github.magonxesp.criteria.infrastructure.serialization.deserializeFiltersFromJson"]},{"name":"fun String.deserializeOrderByFromJson(): List<OrderBy>","description":"io.github.magonxesp.criteria.infrastructure.serialization.deserializeOrderByFromJson","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/deserialize-order-by-from-json.html","searchKeys":["deserializeOrderByFromJson","fun String.deserializeOrderByFromJson(): List<OrderBy>","io.github.magonxesp.criteria.infrastructure.serialization.deserializeOrderByFromJson"]},{"name":"fun String.isUUID(): Boolean","description":"io.github.magonxesp.criteria.domain.isUUID","location":"core/io.github.magonxesp.criteria.domain/is-u-u-i-d.html","searchKeys":["isUUID","fun String.isUUID(): Boolean","io.github.magonxesp.criteria.domain.isUUID"]},{"name":"fun String.toUUID(): UUID","description":"io.github.magonxesp.criteria.domain.toUUID","location":"core/io.github.magonxesp.criteria.domain/to-u-u-i-d.html","searchKeys":["toUUID","fun String.toUUID(): UUID","io.github.magonxesp.criteria.domain.toUUID"]},{"name":"fun adapt(filter: Filter): Op<Boolean>","description":"io.github.magonxesp.criteria.infrastructure.exposed.FilterPredicateAdapter.adapt","location":"core/io.github.magonxesp.criteria.infrastructure.exposed/-filter-predicate-adapter/adapt.html","searchKeys":["adapt","fun adapt(filter: Filter): Op<Boolean>","io.github.magonxesp.criteria.infrastructure.exposed.FilterPredicateAdapter.adapt"]},{"name":"fun adapt(filters: List<Filter>): Array<Bson>","description":"io.github.magonxesp.criteria.infrastructure.mongodb.FilterBsonAdapter.adapt","location":"core/io.github.magonxesp.criteria.infrastructure.mongodb/-filter-bson-adapter/adapt.html","searchKeys":["adapt","fun adapt(filters: List<Filter>): Array<Bson>","io.github.magonxesp.criteria.infrastructure.mongodb.FilterBsonAdapter.adapt"]},{"name":"fun adapt(filters: List<Filter>): Array<Op<Boolean>>","description":"io.github.magonxesp.criteria.infrastructure.exposed.FilterPredicateAdapter.adapt","location":"core/io.github.magonxesp.criteria.infrastructure.exposed/-filter-predicate-adapter/adapt.html","searchKeys":["adapt","fun adapt(filters: List<Filter>): Array<Op<Boolean>>","io.github.magonxesp.criteria.infrastructure.exposed.FilterPredicateAdapter.adapt"]},{"name":"fun adapt(orderBy: List<OrderBy>): Bson","description":"io.github.magonxesp.criteria.infrastructure.mongodb.OrderByBsonAdapter.adapt","location":"core/io.github.magonxesp.criteria.infrastructure.mongodb/-order-by-bson-adapter/adapt.html","searchKeys":["adapt","fun adapt(orderBy: List<OrderBy>): Bson","io.github.magonxesp.criteria.infrastructure.mongodb.OrderByBsonAdapter.adapt"]},{"name":"fun adapt(orderBys: List<OrderBy>): Array<Pair<Expression<*>, SortOrder>>","description":"io.github.magonxesp.criteria.infrastructure.exposed.OrderPredicateAdapter.adapt","location":"core/io.github.magonxesp.criteria.infrastructure.exposed/-order-predicate-adapter/adapt.html","searchKeys":["adapt","fun adapt(orderBys: List<OrderBy>): Array<Pair<Expression<*>, SortOrder>>","io.github.magonxesp.criteria.infrastructure.exposed.OrderPredicateAdapter.adapt"]},{"name":"fun apply(criteria: Criteria, query: Query)","description":"io.github.magonxesp.criteria.infrastructure.exposed.CriteriaExposedQueryAdapter.apply","location":"core/io.github.magonxesp.criteria.infrastructure.exposed/-criteria-exposed-query-adapter/apply.html","searchKeys":["apply","fun apply(criteria: Criteria, query: Query)","io.github.magonxesp.criteria.infrastructure.exposed.CriteriaExposedQueryAdapter.apply"]},{"name":"fun build(): Criteria","description":"io.github.magonxesp.criteria.domain.CriteriaBuilder.build","location":"core/io.github.magonxesp.criteria.domain/-criteria-builder/build.html","searchKeys":["build","fun build(): Criteria","io.github.magonxesp.criteria.domain.CriteriaBuilder.build"]},{"name":"fun criteria(builder: CriteriaBuilder.() -> Unit): Criteria","description":"io.github.magonxesp.criteria.domain.criteria","location":"core/io.github.magonxesp.criteria.domain/criteria.html","searchKeys":["criteria","fun criteria(builder: CriteriaBuilder.() -> Unit): Criteria","io.github.magonxesp.criteria.domain.criteria"]},{"name":"fun fieldMapOf(vararg mapping: Pair<String, String>): DefaultFieldMap","description":"io.github.magonxesp.criteria.infrastructure.map.fieldMapOf","location":"core/io.github.magonxesp.criteria.infrastructure.map/field-map-of.html","searchKeys":["fieldMapOf","fun fieldMapOf(vararg mapping: Pair<String, String>): DefaultFieldMap","io.github.magonxesp.criteria.infrastructure.map.fieldMapOf"]},{"name":"fun filter(field: String, value: Any, operator: FilterOperator = FilterOperator.EQUALS)","description":"io.github.magonxesp.criteria.domain.CriteriaBuilder.filter","location":"core/io.github.magonxesp.criteria.domain/-criteria-builder/filter.html","searchKeys":["filter","fun filter(field: String, value: Any, operator: FilterOperator = FilterOperator.EQUALS)","io.github.magonxesp.criteria.domain.CriteriaBuilder.filter"]},{"name":"fun fromOperator(operator: String): FilterOperator","description":"io.github.magonxesp.criteria.domain.FilterOperator.Companion.fromOperator","location":"core/io.github.magonxesp.criteria.domain/-filter-operator/-companion/from-operator.html","searchKeys":["fromOperator","fun fromOperator(operator: String): FilterOperator","io.github.magonxesp.criteria.domain.FilterOperator.Companion.fromOperator"]},{"name":"fun orderBy(field: String, order: Order)","description":"io.github.magonxesp.criteria.domain.CriteriaBuilder.orderBy","location":"core/io.github.magonxesp.criteria.domain/-criteria-builder/order-by.html","searchKeys":["orderBy","fun orderBy(field: String, order: Order)","io.github.magonxesp.criteria.domain.CriteriaBuilder.orderBy"]},{"name":"fun setFilters(filters: List<Filter>)","description":"io.github.magonxesp.criteria.domain.CriteriaBuilder.setFilters","location":"core/io.github.magonxesp.criteria.domain/-criteria-builder/set-filters.html","searchKeys":["setFilters","fun setFilters(filters: List<Filter>)","io.github.magonxesp.criteria.domain.CriteriaBuilder.setFilters"]},{"name":"fun setOrderBy(orderBy: List<OrderBy>)","description":"io.github.magonxesp.criteria.domain.CriteriaBuilder.setOrderBy","location":"core/io.github.magonxesp.criteria.domain/-criteria-builder/set-order-by.html","searchKeys":["setOrderBy","fun setOrderBy(orderBy: List<OrderBy>)","io.github.magonxesp.criteria.domain.CriteriaBuilder.setOrderBy"]},{"name":"fun strictFieldMapOf(vararg mapping: Pair<String, String>): StrictFieldMap","description":"io.github.magonxesp.criteria.infrastructure.map.strictFieldMapOf","location":"core/io.github.magonxesp.criteria.infrastructure.map/strict-field-map-of.html","searchKeys":["strictFieldMapOf","fun strictFieldMapOf(vararg mapping: Pair<String, String>): StrictFieldMap","io.github.magonxesp.criteria.infrastructure.map.strictFieldMapOf"]},{"name":"fun valueOf(value: String): FilterOperator","description":"io.github.magonxesp.criteria.domain.FilterOperator.valueOf","location":"core/io.github.magonxesp.criteria.domain/-filter-operator/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): FilterOperator","io.github.magonxesp.criteria.domain.FilterOperator.valueOf"]},{"name":"fun valueOf(value: String): Order","description":"io.github.magonxesp.criteria.domain.Order.valueOf","location":"core/io.github.magonxesp.criteria.domain/-order/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Order","io.github.magonxesp.criteria.domain.Order.valueOf"]},{"name":"fun values(): Array<FilterOperator>","description":"io.github.magonxesp.criteria.domain.FilterOperator.values","location":"core/io.github.magonxesp.criteria.domain/-filter-operator/values.html","searchKeys":["values","fun values(): Array<FilterOperator>","io.github.magonxesp.criteria.domain.FilterOperator.values"]},{"name":"fun values(): Array<Order>","description":"io.github.magonxesp.criteria.domain.Order.values","location":"core/io.github.magonxesp.criteria.domain/-order/values.html","searchKeys":["values","fun values(): Array<Order>","io.github.magonxesp.criteria.domain.Order.values"]},{"name":"infix fun String.toColumn(column: Column<*>): Pair<String, Column<Any>>","description":"io.github.magonxesp.criteria.infrastructure.exposed.toColumn","location":"core/io.github.magonxesp.criteria.infrastructure.exposed/to-column.html","searchKeys":["toColumn","infix fun String.toColumn(column: Column<*>): Pair<String, Column<Any>>","io.github.magonxesp.criteria.infrastructure.exposed.toColumn"]},{"name":"object Companion","description":"io.github.magonxesp.criteria.domain.FilterOperator.Companion","location":"core/io.github.magonxesp.criteria.domain/-filter-operator/-companion/index.html","searchKeys":["Companion","object Companion","io.github.magonxesp.criteria.domain.FilterOperator.Companion"]},{"name":"open operator fun get(index: String): String","description":"io.github.magonxesp.criteria.infrastructure.map.FieldMap.get","location":"core/io.github.magonxesp.criteria.infrastructure.map/-field-map/get.html","searchKeys":["get","open operator fun get(index: String): String","io.github.magonxesp.criteria.infrastructure.map.FieldMap.get"]},{"name":"open operator override fun get(index: String): String","description":"io.github.magonxesp.criteria.infrastructure.map.StrictFieldMap.get","location":"core/io.github.magonxesp.criteria.infrastructure.map/-strict-field-map/get.html","searchKeys":["get","open operator override fun get(index: String): String","io.github.magonxesp.criteria.infrastructure.map.StrictFieldMap.get"]},{"name":"open override val map: Map<String, String>","description":"io.github.magonxesp.criteria.infrastructure.map.DefaultFieldMap.map","location":"core/io.github.magonxesp.criteria.infrastructure.map/-default-field-map/map.html","searchKeys":["map","open override val map: Map<String, String>","io.github.magonxesp.criteria.infrastructure.map.DefaultFieldMap.map"]},{"name":"open override val map: Map<String, String>","description":"io.github.magonxesp.criteria.infrastructure.map.StrictFieldMap.map","location":"core/io.github.magonxesp.criteria.infrastructure.map/-strict-field-map/map.html","searchKeys":["map","open override val map: Map<String, String>","io.github.magonxesp.criteria.infrastructure.map.StrictFieldMap.map"]},{"name":"open override val message: String? = null","description":"io.github.magonxesp.criteria.domain.RequiredFieldException.message","location":"core/io.github.magonxesp.criteria.domain/-required-field-exception/message.html","searchKeys":["message","open override val message: String? = null","io.github.magonxesp.criteria.domain.RequiredFieldException.message"]},{"name":"val currentPage: Long","description":"io.github.magonxesp.criteria.domain.PaginatedCollection.currentPage","location":"core/io.github.magonxesp.criteria.domain/-paginated-collection/current-page.html","searchKeys":["currentPage","val currentPage: Long","io.github.magonxesp.criteria.domain.PaginatedCollection.currentPage"]},{"name":"val entries: EnumEntries<FilterOperator>","description":"io.github.magonxesp.criteria.domain.FilterOperator.entries","location":"core/io.github.magonxesp.criteria.domain/-filter-operator/entries.html","searchKeys":["entries","val entries: EnumEntries<FilterOperator>","io.github.magonxesp.criteria.domain.FilterOperator.entries"]},{"name":"val entries: EnumEntries<Order>","description":"io.github.magonxesp.criteria.domain.Order.entries","location":"core/io.github.magonxesp.criteria.domain/-order/entries.html","searchKeys":["entries","val entries: EnumEntries<Order>","io.github.magonxesp.criteria.domain.Order.entries"]},{"name":"val field: String","description":"io.github.magonxesp.criteria.domain.Filter.field","location":"core/io.github.magonxesp.criteria.domain/-filter/field.html","searchKeys":["field","val field: String","io.github.magonxesp.criteria.domain.Filter.field"]},{"name":"val field: String","description":"io.github.magonxesp.criteria.domain.OrderBy.field","location":"core/io.github.magonxesp.criteria.domain/-order-by/field.html","searchKeys":["field","val field: String","io.github.magonxesp.criteria.domain.OrderBy.field"]},{"name":"val field: String","description":"io.github.magonxesp.criteria.infrastructure.serialization.SerializableFilter.field","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/-serializable-filter/field.html","searchKeys":["field","val field: String","io.github.magonxesp.criteria.infrastructure.serialization.SerializableFilter.field"]},{"name":"val field: String","description":"io.github.magonxesp.criteria.infrastructure.serialization.SerializableOrderBy.field","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/-serializable-order-by/field.html","searchKeys":["field","val field: String","io.github.magonxesp.criteria.infrastructure.serialization.SerializableOrderBy.field"]},{"name":"val filters: List<Filter>","description":"io.github.magonxesp.criteria.domain.Criteria.filters","location":"core/io.github.magonxesp.criteria.domain/-criteria/filters.html","searchKeys":["filters","val filters: List<Filter>","io.github.magonxesp.criteria.domain.Criteria.filters"]},{"name":"val filters: List<SerializableFilter>","description":"io.github.magonxesp.criteria.infrastructure.serialization.SerializableCriteria.filters","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/-serializable-criteria/filters.html","searchKeys":["filters","val filters: List<SerializableFilter>","io.github.magonxesp.criteria.infrastructure.serialization.SerializableCriteria.filters"]},{"name":"val items: List<T>","description":"io.github.magonxesp.criteria.domain.PaginatedCollection.items","location":"core/io.github.magonxesp.criteria.domain/-paginated-collection/items.html","searchKeys":["items","val items: List<T>","io.github.magonxesp.criteria.domain.PaginatedCollection.items"]},{"name":"val operator: FilterOperator","description":"io.github.magonxesp.criteria.domain.Filter.operator","location":"core/io.github.magonxesp.criteria.domain/-filter/operator.html","searchKeys":["operator","val operator: FilterOperator","io.github.magonxesp.criteria.domain.Filter.operator"]},{"name":"val operator: String","description":"io.github.magonxesp.criteria.domain.FilterOperator.operator","location":"core/io.github.magonxesp.criteria.domain/-filter-operator/operator.html","searchKeys":["operator","val operator: String","io.github.magonxesp.criteria.domain.FilterOperator.operator"]},{"name":"val operator: String","description":"io.github.magonxesp.criteria.infrastructure.serialization.SerializableFilter.operator","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/-serializable-filter/operator.html","searchKeys":["operator","val operator: String","io.github.magonxesp.criteria.infrastructure.serialization.SerializableFilter.operator"]},{"name":"val order: Order","description":"io.github.magonxesp.criteria.domain.OrderBy.order","location":"core/io.github.magonxesp.criteria.domain/-order-by/order.html","searchKeys":["order","val order: Order","io.github.magonxesp.criteria.domain.OrderBy.order"]},{"name":"val order: String","description":"io.github.magonxesp.criteria.infrastructure.serialization.SerializableOrderBy.order","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/-serializable-order-by/order.html","searchKeys":["order","val order: String","io.github.magonxesp.criteria.infrastructure.serialization.SerializableOrderBy.order"]},{"name":"val orderBy: List<OrderBy>","description":"io.github.magonxesp.criteria.domain.Criteria.orderBy","location":"core/io.github.magonxesp.criteria.domain/-criteria/order-by.html","searchKeys":["orderBy","val orderBy: List<OrderBy>","io.github.magonxesp.criteria.domain.Criteria.orderBy"]},{"name":"val orderBy: List<SerializableOrderBy>","description":"io.github.magonxesp.criteria.infrastructure.serialization.SerializableCriteria.orderBy","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/-serializable-criteria/order-by.html","searchKeys":["orderBy","val orderBy: List<SerializableOrderBy>","io.github.magonxesp.criteria.infrastructure.serialization.SerializableCriteria.orderBy"]},{"name":"val page: Int","description":"io.github.magonxesp.criteria.infrastructure.serialization.SerializablePagination.page","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/-serializable-pagination/page.html","searchKeys":["page","val page: Int","io.github.magonxesp.criteria.infrastructure.serialization.SerializablePagination.page"]},{"name":"val page: Int = 1","description":"io.github.magonxesp.criteria.domain.Pagination.page","location":"core/io.github.magonxesp.criteria.domain/-pagination/page.html","searchKeys":["page","val page: Int = 1","io.github.magonxesp.criteria.domain.Pagination.page"]},{"name":"val pagination: Pagination","description":"io.github.magonxesp.criteria.domain.Criteria.pagination","location":"core/io.github.magonxesp.criteria.domain/-criteria/pagination.html","searchKeys":["pagination","val pagination: Pagination","io.github.magonxesp.criteria.domain.Criteria.pagination"]},{"name":"val pagination: SerializablePagination","description":"io.github.magonxesp.criteria.infrastructure.serialization.SerializableCriteria.pagination","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/-serializable-criteria/pagination.html","searchKeys":["pagination","val pagination: SerializablePagination","io.github.magonxesp.criteria.infrastructure.serialization.SerializableCriteria.pagination"]},{"name":"val size: Int?","description":"io.github.magonxesp.criteria.infrastructure.serialization.SerializablePagination.size","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/-serializable-pagination/size.html","searchKeys":["size","val size: Int?","io.github.magonxesp.criteria.infrastructure.serialization.SerializablePagination.size"]},{"name":"val size: Int? = 25","description":"io.github.magonxesp.criteria.domain.Pagination.size","location":"core/io.github.magonxesp.criteria.domain/-pagination/size.html","searchKeys":["size","val size: Int? = 25","io.github.magonxesp.criteria.domain.Pagination.size"]},{"name":"val totalItems: Long","description":"io.github.magonxesp.criteria.domain.PaginatedCollection.totalItems","location":"core/io.github.magonxesp.criteria.domain/-paginated-collection/total-items.html","searchKeys":["totalItems","val totalItems: Long","io.github.magonxesp.criteria.domain.PaginatedCollection.totalItems"]},{"name":"val totalPages: Long","description":"io.github.magonxesp.criteria.domain.PaginatedCollection.totalPages","location":"core/io.github.magonxesp.criteria.domain/-paginated-collection/total-pages.html","searchKeys":["totalPages","val totalPages: Long","io.github.magonxesp.criteria.domain.PaginatedCollection.totalPages"]},{"name":"val value: Any","description":"io.github.magonxesp.criteria.domain.Filter.value","location":"core/io.github.magonxesp.criteria.domain/-filter/value.html","searchKeys":["value","val value: Any","io.github.magonxesp.criteria.domain.Filter.value"]},{"name":"val value: JsonElement","description":"io.github.magonxesp.criteria.infrastructure.serialization.SerializableFilter.value","location":"core/io.github.magonxesp.criteria.infrastructure.serialization/-serializable-filter/value.html","searchKeys":["value","val value: JsonElement","io.github.magonxesp.criteria.infrastructure.serialization.SerializableFilter.value"]},{"name":"var page: Int","description":"io.github.magonxesp.criteria.domain.CriteriaBuilder.page","location":"core/io.github.magonxesp.criteria.domain/-criteria-builder/page.html","searchKeys":["page","var page: Int","io.github.magonxesp.criteria.domain.CriteriaBuilder.page"]},{"name":"var pageSize: Int?","description":"io.github.magonxesp.criteria.domain.CriteriaBuilder.pageSize","location":"core/io.github.magonxesp.criteria.domain/-criteria-builder/page-size.html","searchKeys":["pageSize","var pageSize: Int?","io.github.magonxesp.criteria.domain.CriteriaBuilder.pageSize"]},{"name":"abstract class JpaAdapter(root: Root<*>, builder: CriteriaBuilder, joinMap: JoinMap, fieldMap: FieldMap) : Adapter","description":"io.github.magonxesp.criteria.infrastructure.jpa.JpaAdapter","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.jpa/-jpa-adapter/index.html","searchKeys":["JpaAdapter","abstract class JpaAdapter(root: Root<*>, builder: CriteriaBuilder, joinMap: JoinMap, fieldMap: FieldMap) : Adapter","io.github.magonxesp.criteria.infrastructure.jpa.JpaAdapter"]},{"name":"class CriteriaJPASpecificationAdapter(fieldMap: FieldMap = DefaultFieldMap())","description":"io.github.magonxesp.criteria.infrastructure.spring.CriteriaJPASpecificationAdapter","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.spring/-criteria-j-p-a-specification-adapter/index.html","searchKeys":["CriteriaJPASpecificationAdapter","class CriteriaJPASpecificationAdapter(fieldMap: FieldMap = DefaultFieldMap())","io.github.magonxesp.criteria.infrastructure.spring.CriteriaJPASpecificationAdapter"]},{"name":"class FilterListJpaPredicateAdapter(root: Root<*>, builder: CriteriaBuilder, fieldMap: FieldMap, joinMap: JoinMap) : JpaAdapter","description":"io.github.magonxesp.criteria.infrastructure.jpa.FilterListJpaPredicateAdapter","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.jpa/-filter-list-jpa-predicate-adapter/index.html","searchKeys":["FilterListJpaPredicateAdapter","class FilterListJpaPredicateAdapter(root: Root<*>, builder: CriteriaBuilder, fieldMap: FieldMap, joinMap: JoinMap) : JpaAdapter","io.github.magonxesp.criteria.infrastructure.jpa.FilterListJpaPredicateAdapter"]},{"name":"class FilterScalarPredicateAdapter(root: Root<*>, builder: CriteriaBuilder, fieldMap: FieldMap, joinMap: JoinMap) : JpaAdapter","description":"io.github.magonxesp.criteria.infrastructure.jpa.FilterScalarPredicateAdapter","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.jpa/-filter-scalar-predicate-adapter/index.html","searchKeys":["FilterScalarPredicateAdapter","class FilterScalarPredicateAdapter(root: Root<*>, builder: CriteriaBuilder, fieldMap: FieldMap, joinMap: JoinMap) : JpaAdapter","io.github.magonxesp.criteria.infrastructure.jpa.FilterScalarPredicateAdapter"]},{"name":"class FiltersJpaPredicateAdapter(root: Root<*>, builder: CriteriaBuilder, fieldMap: FieldMap, joinMap: JoinMap) : JpaAdapter","description":"io.github.magonxesp.criteria.infrastructure.jpa.FiltersJpaPredicateAdapter","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.jpa/-filters-jpa-predicate-adapter/index.html","searchKeys":["FiltersJpaPredicateAdapter","class FiltersJpaPredicateAdapter(root: Root<*>, builder: CriteriaBuilder, fieldMap: FieldMap, joinMap: JoinMap) : JpaAdapter","io.github.magonxesp.criteria.infrastructure.jpa.FiltersJpaPredicateAdapter"]},{"name":"class OrderByJpaOrderAdapter(root: Root<*>, builder: CriteriaBuilder, fieldMap: FieldMap, joinMap: JoinMap) : JpaAdapter","description":"io.github.magonxesp.criteria.infrastructure.jpa.OrderByJpaOrderAdapter","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.jpa/-order-by-jpa-order-adapter/index.html","searchKeys":["OrderByJpaOrderAdapter","class OrderByJpaOrderAdapter(root: Root<*>, builder: CriteriaBuilder, fieldMap: FieldMap, joinMap: JoinMap) : JpaAdapter","io.github.magonxesp.criteria.infrastructure.jpa.OrderByJpaOrderAdapter"]},{"name":"constructor(fieldMap: FieldMap = DefaultFieldMap())","description":"io.github.magonxesp.criteria.infrastructure.spring.CriteriaJPASpecificationAdapter.CriteriaJPASpecificationAdapter","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.spring/-criteria-j-p-a-specification-adapter/-criteria-j-p-a-specification-adapter.html","searchKeys":["CriteriaJPASpecificationAdapter","constructor(fieldMap: FieldMap = DefaultFieldMap())","io.github.magonxesp.criteria.infrastructure.spring.CriteriaJPASpecificationAdapter.CriteriaJPASpecificationAdapter"]},{"name":"constructor(root: Root<*>, builder: CriteriaBuilder, fieldMap: FieldMap, joinMap: JoinMap)","description":"io.github.magonxesp.criteria.infrastructure.jpa.FilterListJpaPredicateAdapter.FilterListJpaPredicateAdapter","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.jpa/-filter-list-jpa-predicate-adapter/-filter-list-jpa-predicate-adapter.html","searchKeys":["FilterListJpaPredicateAdapter","constructor(root: Root<*>, builder: CriteriaBuilder, fieldMap: FieldMap, joinMap: JoinMap)","io.github.magonxesp.criteria.infrastructure.jpa.FilterListJpaPredicateAdapter.FilterListJpaPredicateAdapter"]},{"name":"constructor(root: Root<*>, builder: CriteriaBuilder, fieldMap: FieldMap, joinMap: JoinMap)","description":"io.github.magonxesp.criteria.infrastructure.jpa.FilterScalarPredicateAdapter.FilterScalarPredicateAdapter","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.jpa/-filter-scalar-predicate-adapter/-filter-scalar-predicate-adapter.html","searchKeys":["FilterScalarPredicateAdapter","constructor(root: Root<*>, builder: CriteriaBuilder, fieldMap: FieldMap, joinMap: JoinMap)","io.github.magonxesp.criteria.infrastructure.jpa.FilterScalarPredicateAdapter.FilterScalarPredicateAdapter"]},{"name":"constructor(root: Root<*>, builder: CriteriaBuilder, fieldMap: FieldMap, joinMap: JoinMap)","description":"io.github.magonxesp.criteria.infrastructure.jpa.FiltersJpaPredicateAdapter.FiltersJpaPredicateAdapter","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.jpa/-filters-jpa-predicate-adapter/-filters-jpa-predicate-adapter.html","searchKeys":["FiltersJpaPredicateAdapter","constructor(root: Root<*>, builder: CriteriaBuilder, fieldMap: FieldMap, joinMap: JoinMap)","io.github.magonxesp.criteria.infrastructure.jpa.FiltersJpaPredicateAdapter.FiltersJpaPredicateAdapter"]},{"name":"constructor(root: Root<*>, builder: CriteriaBuilder, fieldMap: FieldMap, joinMap: JoinMap)","description":"io.github.magonxesp.criteria.infrastructure.jpa.OrderByJpaOrderAdapter.OrderByJpaOrderAdapter","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.jpa/-order-by-jpa-order-adapter/-order-by-jpa-order-adapter.html","searchKeys":["OrderByJpaOrderAdapter","constructor(root: Root<*>, builder: CriteriaBuilder, fieldMap: FieldMap, joinMap: JoinMap)","io.github.magonxesp.criteria.infrastructure.jpa.OrderByJpaOrderAdapter.OrderByJpaOrderAdapter"]},{"name":"constructor(root: Root<*>, builder: CriteriaBuilder, joinMap: JoinMap, fieldMap: FieldMap)","description":"io.github.magonxesp.criteria.infrastructure.jpa.JpaAdapter.JpaAdapter","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.jpa/-jpa-adapter/-jpa-adapter.html","searchKeys":["JpaAdapter","constructor(root: Root<*>, builder: CriteriaBuilder, joinMap: JoinMap, fieldMap: FieldMap)","io.github.magonxesp.criteria.infrastructure.jpa.JpaAdapter.JpaAdapter"]},{"name":"fun <T> adapt(criteria: Criteria, joins: Root<T>.() -> JoinMap = { mapOf() }): Specification<T>","description":"io.github.magonxesp.criteria.infrastructure.spring.CriteriaJPASpecificationAdapter.adapt","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.spring/-criteria-j-p-a-specification-adapter/adapt.html","searchKeys":["adapt","fun <T> adapt(criteria: Criteria, joins: Root<T>.() -> JoinMap = { mapOf() }): Specification<T>","io.github.magonxesp.criteria.infrastructure.spring.CriteriaJPASpecificationAdapter.adapt"]},{"name":"fun <T> apply(criteria: Criteria, repository: JpaSpecificationExecutor<T>, joins: Root<T>.() -> JoinMap = { mapOf() }): PaginatedCollection<T>","description":"io.github.magonxesp.criteria.infrastructure.spring.CriteriaJPASpecificationAdapter.apply","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.spring/-criteria-j-p-a-specification-adapter/apply.html","searchKeys":["apply","fun <T> apply(criteria: Criteria, repository: JpaSpecificationExecutor<T>, joins: Root<T>.() -> JoinMap = { mapOf() }): PaginatedCollection<T>","io.github.magonxesp.criteria.infrastructure.spring.CriteriaJPASpecificationAdapter.apply"]},{"name":"fun adapt(filters: List<Filter>): Array<Predicate>","description":"io.github.magonxesp.criteria.infrastructure.jpa.FiltersJpaPredicateAdapter.adapt","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.jpa/-filters-jpa-predicate-adapter/adapt.html","searchKeys":["adapt","fun adapt(filters: List<Filter>): Array<Predicate>","io.github.magonxesp.criteria.infrastructure.jpa.FiltersJpaPredicateAdapter.adapt"]},{"name":"fun adapt(orderBy: List<OrderBy>): Array<Order>","description":"io.github.magonxesp.criteria.infrastructure.jpa.OrderByJpaOrderAdapter.adapt","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.jpa/-order-by-jpa-order-adapter/adapt.html","searchKeys":["adapt","fun adapt(orderBy: List<OrderBy>): Array<Order>","io.github.magonxesp.criteria.infrastructure.jpa.OrderByJpaOrderAdapter.adapt"]},{"name":"fun adaptPagination(criteria: Criteria): PageRequest","description":"io.github.magonxesp.criteria.infrastructure.spring.CriteriaJPASpecificationAdapter.adaptPagination","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.spring/-criteria-j-p-a-specification-adapter/adapt-pagination.html","searchKeys":["adaptPagination","fun adaptPagination(criteria: Criteria): PageRequest","io.github.magonxesp.criteria.infrastructure.spring.CriteriaJPASpecificationAdapter.adaptPagination"]},{"name":"fun booleanPredicate(filter: Filter): Predicate?","description":"io.github.magonxesp.criteria.infrastructure.jpa.FilterScalarPredicateAdapter.booleanPredicate","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.jpa/-filter-scalar-predicate-adapter/boolean-predicate.html","searchKeys":["booleanPredicate","fun booleanPredicate(filter: Filter): Predicate?","io.github.magonxesp.criteria.infrastructure.jpa.FilterScalarPredicateAdapter.booleanPredicate"]},{"name":"fun instantPredicate(filter: Filter): Predicate?","description":"io.github.magonxesp.criteria.infrastructure.jpa.FilterScalarPredicateAdapter.instantPredicate","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.jpa/-filter-scalar-predicate-adapter/instant-predicate.html","searchKeys":["instantPredicate","fun instantPredicate(filter: Filter): Predicate?","io.github.magonxesp.criteria.infrastructure.jpa.FilterScalarPredicateAdapter.instantPredicate"]},{"name":"fun listPredicate(filter: Filter): Predicate?","description":"io.github.magonxesp.criteria.infrastructure.jpa.FilterListJpaPredicateAdapter.listPredicate","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.jpa/-filter-list-jpa-predicate-adapter/list-predicate.html","searchKeys":["listPredicate","fun listPredicate(filter: Filter): Predicate?","io.github.magonxesp.criteria.infrastructure.jpa.FilterListJpaPredicateAdapter.listPredicate"]},{"name":"fun numberPredicate(filter: Filter): Predicate?","description":"io.github.magonxesp.criteria.infrastructure.jpa.FilterScalarPredicateAdapter.numberPredicate","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.jpa/-filter-scalar-predicate-adapter/number-predicate.html","searchKeys":["numberPredicate","fun numberPredicate(filter: Filter): Predicate?","io.github.magonxesp.criteria.infrastructure.jpa.FilterScalarPredicateAdapter.numberPredicate"]},{"name":"fun stringPredicate(filter: Filter): Predicate?","description":"io.github.magonxesp.criteria.infrastructure.jpa.FilterScalarPredicateAdapter.stringPredicate","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.jpa/-filter-scalar-predicate-adapter/string-predicate.html","searchKeys":["stringPredicate","fun stringPredicate(filter: Filter): Predicate?","io.github.magonxesp.criteria.infrastructure.jpa.FilterScalarPredicateAdapter.stringPredicate"]},{"name":"typealias JoinMap = Map<String, Join<*, *>>","description":"io.github.magonxesp.criteria.infrastructure.jpa.JoinMap","location":"spring-boot/io.github.magonxesp.criteria.infrastructure.jpa/-join-map/index.html","searchKeys":["JoinMap","typealias JoinMap = Map<String, Join<*, *>>","io.github.magonxesp.criteria.infrastructure.jpa.JoinMap"]}]