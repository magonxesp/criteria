"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[128],{4774:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"development/index","title":"Development","description":"Table of contents","source":"@site/docs/development/index.md","sourceDirName":"development","slug":"/development/","permalink":"/criteria/development/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/development/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Serialization","permalink":"/criteria/serialization"},"next":{"title":"Installing git cliff","permalink":"/criteria/development/install-git-cliff"}}');var l=s(4848),t=s(8453);const i={},a="Development",c={},o=[{value:"Table of contents",id:"table-of-contents",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Test",id:"test",level:2},{value:"Creating the Changelog",id:"creating-the-changelog",level:2},{value:"Publish artifacts",id:"publish-artifacts",level:2},{value:"Publish to Sona Type (Maven central)",id:"publish-to-sona-type-maven-central",level:3},{value:"Publish to Maven local",id:"publish-to-maven-local",level:3}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"development",children:"Development"})}),"\n",(0,l.jsx)(n.h2,{id:"table-of-contents",children:"Table of contents"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#requirements",children:"Requirements"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#test",children:"Test"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#creating-the-changelog",children:"Creating the Changelog"})}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"#publish-artifacts",children:"Publish artifacts"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#publish-to-sona-type-maven-central",children:"Publish to Sona Type (Maven central)"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#publish-to-maven-local",children:"Publish to Maven local"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"OpenJDK 21"}),"\n",(0,l.jsxs)(n.li,{children:["jq - ",(0,l.jsx)(n.a,{href:"https://jqlang.github.io/jq/download/",children:"Install jq"})]}),"\n",(0,l.jsxs)(n.li,{children:["Git cliff - ",(0,l.jsx)(n.a,{href:"/criteria/development/install-git-cliff",children:"Install git cliff"})]}),"\n",(0,l.jsx)(n.li,{children:"Make"}),"\n",(0,l.jsx)(n.li,{children:"Gradle 8.5 (wrapper is recommended)"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"test",children:"Test"}),"\n",(0,l.jsx)(n.p,{children:"For test the project you should run this command"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ ./gradlew cleanTest build test\n"})}),"\n",(0,l.jsx)(n.h2,{id:"creating-the-changelog",children:"Creating the Changelog"}),"\n",(0,l.jsxs)(n.p,{children:["Before creating the ",(0,l.jsx)(n.code,{children:"CHANGELOG.md"})," you should ensure you are using ",(0,l.jsx)(n.a,{href:"https://www.conventionalcommits.org/en/v1.0.0/",children:"conventional commits"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["You should create the tags following ",(0,l.jsx)(n.a,{href:"https://semver.org/",children:"semantic versioning"}),"."]}),"\n",(0,l.jsx)(n.p,{children:"Create the first version tag."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ git tag v0.0.0\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Create the ",(0,l.jsx)(n.code,{children:"CHANGELOG.md"})," file."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ git cliff -o CHANGELOG.md\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Alternatively you can use the action ",(0,l.jsx)(n.code,{children:"first-verion"})," from the Makefile for create the first version."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ make first-version\n"})}),"\n",(0,l.jsx)(n.p,{children:"When you have new commits for the new version you should calculate the new version before create the tag."}),"\n",(0,l.jsx)(n.p,{children:"Calculate the new version and create the tag."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ git tag v$(git cliff --unreleased --bump --context | jq -r '.[0].version')\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Update the ",(0,l.jsx)(n.code,{children:"CHANGELOG.md"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ git cliff --bump -o CHANGELOG.md\n"})}),"\n",(0,l.jsx)(n.p,{children:"You can generate the changelog only for the current version."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ git cliff --current\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Alternatively you can use the action ",(0,l.jsx)(n.code,{children:"bump-verion"})," from the Makefile for bump the version including updating the ",(0,l.jsx)(n.code,{children:"CHANGELOG.md"})]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ make bump-version\n"})}),"\n",(0,l.jsx)(n.h2,{id:"publish-artifacts",children:"Publish artifacts"}),"\n",(0,l.jsxs)(n.p,{children:["\u26a0\ufe0f ",(0,l.jsx)(n.strong,{children:"CAUTION"})," \u26a0\ufe0f"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"The artifacts should be published only by the owner of the repository."})}),"\n",(0,l.jsxs)(n.p,{children:["Before publish you need to create the ",(0,l.jsx)(n.code,{children:"gradle.properties"})," file on the ",(0,l.jsx)(n.code,{children:".gradle"})," directory on your home directory\nand create the GPG keys."]}),"\n",(0,l.jsx)(n.p,{children:"Create the GPG keys."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ gpg --gen-key\n"})}),"\n",(0,l.jsx)(n.p,{children:"Get the GPG key id."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ gpg -K\n"})}),"\n",(0,l.jsx)(n.p,{children:"Upload the keys to the ubuntu keyserver."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ gpg --keyserver keyserver.ubuntu.com --send-keys <your gpg key id>\n"})}),"\n",(0,l.jsx)(n.p,{children:"Export the secret keys to a keyring on your home directory."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ gpg --keyring secring.gpg --export-secret-keys > ~/.gnupg/secring.gpg\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Edit or create the ",(0,l.jsx)(n.code,{children:"gradle.properties"})," file with your favorite text editor."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ vim ~/.gradle/gradle.properties\n"})}),"\n",(0,l.jsx)(n.p,{children:"And put the following content at the end of the file."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",children:"signing.keyId=<the last 8 digits of the key id>\nsigning.password=<your gpg key passphrase>\nsigning.secretKeyRingFile=<absolute path to your home directory>/.gnupg/secring.gpg\n\ncentralPortal.username=<sonatype user token>\ncentralPortal.password=<sonatype password token>\n"})}),"\n",(0,l.jsxs)(n.p,{children:["If you want to publish a gradle plugin you need to append the following content.\nYou may find your keys on the user page of the ",(0,l.jsx)(n.a,{href:"https://plugins.gradle.org/",children:"Gradle Plugin Portal"})]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-text",children:"gradle.publish.key=<your publish key>\ngradle.publish.secret=<your publish secret>\n"})}),"\n",(0,l.jsx)(n.h3,{id:"publish-to-sona-type-maven-central",children:"Publish to Sona Type (Maven central)"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ ./gradlew publishToCentralPortal\n"})}),"\n",(0,l.jsx)(n.h3,{id:"publish-to-maven-local",children:"Publish to Maven local"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",children:"$ ./gradlew publishToMavenLocal\n"})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var r=s(6540);const l={},t=r.createContext(l);function i(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);